<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xin.db.dao.mUsersMapper" >
  <resultMap id="BaseResultMap" type="com.xin.db.entity.mUsers" >
    <id column="tid" property="tid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pwd" property="pwd" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="first_login_flag" property="firstLoginFlag" jdbcType="BIT" />
    <result column="postion" property="postion" jdbcType="SMALLINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="CHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    tid, name, email, pwd, role_id, role_name, first_login_flag, postion, create_time, 
    state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xin.db.entity.mUsersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from m_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="page != null" >
      limit #{page.begin} , #{page.size}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_users
    where tid = #{tid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_users
    where tid = #{tid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xin.db.entity.mUsersExample" >
    delete from m_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xin.db.entity.mUsers" >
    insert into m_users (tid, name, email, 
      pwd, role_id, role_name, 
      first_login_flag, postion, create_time, 
      state)
    values (#{tid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{pwd,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, 
      #{firstLoginFlag,jdbcType=BIT}, #{postion,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xin.db.entity.mUsers" >
    insert into m_users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        tid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="pwd != null" >
        pwd,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="firstLoginFlag != null" >
        first_login_flag,
      </if>
      <if test="postion != null" >
        postion,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="firstLoginFlag != null" >
        #{firstLoginFlag,jdbcType=BIT},
      </if>
      <if test="postion != null" >
        #{postion,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xin.db.entity.mUsersExample" resultType="java.lang.Integer" >
    select count(*) from m_users
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update m_users
    <set >
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null" >
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.firstLoginFlag != null" >
        first_login_flag = #{record.firstLoginFlag,jdbcType=BIT},
      </if>
      <if test="record.postion != null" >
        postion = #{record.postion,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update m_users
    set tid = #{record.tid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      first_login_flag = #{record.firstLoginFlag,jdbcType=BIT},
      postion = #{record.postion,jdbcType=SMALLINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xin.db.entity.mUsers" >
    update m_users
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null" >
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="firstLoginFlag != null" >
        first_login_flag = #{firstLoginFlag,jdbcType=BIT},
      </if>
      <if test="postion != null" >
        postion = #{postion,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=CHAR},
      </if>
    </set>
    where tid = #{tid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xin.db.entity.mUsers" >
    update m_users
    set name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      first_login_flag = #{firstLoginFlag,jdbcType=BIT},
      postion = #{postion,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=CHAR}
    where tid = #{tid,jdbcType=INTEGER}
  </update>
</mapper>